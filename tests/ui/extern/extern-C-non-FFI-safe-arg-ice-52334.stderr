warning: `extern` callback uses type `CStr`, which is not FFI-safe
  --> $DIR/extern-C-non-FFI-safe-arg-ice-52334.rs:7:12
   |
LL | type Foo = extern "C" fn(::std::ffi::CStr);
   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not FFI-safe
   |
   = note: the function pointer to `extern "C" fn(CStr)` is FFI-unsafe due to `CStr`
   = help: consider passing a `*const std::ffi::c_char` or `*mut std::ffi::c_char` instead,
           and use `CString::into_raw()` then `CString::from_raw()` or a dedicated buffer
           (note that `CString::into_raw()`'s output must not be `libc::free()`'d)
   = note: `CStr`/`CString` do not have a guaranteed layout
   = note: `#[warn(improper_c_callbacks)]` on by default

warning: `extern` block uses type `extern "C" fn(CStr)`, which is not FFI-safe
  --> $DIR/extern-C-non-FFI-safe-arg-ice-52334.rs:10:18
   |
LL |     fn meh(blah: Foo);
   |                  ^^^ not FFI-safe
   |
   = note: the function pointer to `extern "C" fn(CStr)` is FFI-unsafe due to `CStr`
   = help: consider passing a `*const std::ffi::c_char` or `*mut std::ffi::c_char` instead,
           and use `CString::into_raw()` then `CString::from_raw()` or a dedicated buffer
           (note that `CString::into_raw()`'s output must not be `libc::free()`'d)
   = note: `CStr`/`CString` do not have a guaranteed layout
   = note: `#[warn(improper_ctypes)]` on by default

warning: 2 warnings emitted

